{
	"info": {
		"_postman_id": "c2ccfa96-c598-4e42-ad98-b0f19079c768",
		"name": "Airlines",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12453070"
	},
	"item": [
		{
			"name": "Create Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"airline_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"de adsad\",\n    \"description\": \"otdadadsara\",\n    \"dateFounding\": \"1998-03-12\",\n    \"webPage\":\"google.com\"\n    \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/api/{{apiVersion}}/airlines",
					"protocol": "{{baseProtocol}}",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{basePort}}",
					"path": [
						"api",
						"{{apiVersion}}",
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create invalid airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"de adsad\",\n    \"description\": \"otdadadsara\",\n    \"dateFounding\": \"2022-12-12\",\n    \"webPage\":\"google.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/api/{{apiVersion}}/airlines",
					"protocol": "{{baseProtocol}}",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{basePort}}",
					"path": [
						"api",
						"{{apiVersion}}",
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Airlines",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of airlines > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/api/{{apiVersion}}/airlines",
					"protocol": "{{baseProtocol}}",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{basePort}}",
					"path": [
						"api",
						"{{apiVersion}}",
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Airline by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/api/{{apiVersion}}/airlines/{{airline_id}}",
					"protocol": "{{baseProtocol}}",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{basePort}}",
					"path": [
						"api",
						"{{apiVersion}}",
						"airlines",
						"{{airline_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Airline with unexisting id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airline with id 82433181-5b98-42b1-97a2-2520ba14a8d6 has not been found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/api/{{apiVersion}}/airlines/82433181-5b98-42b1-97a2-2520ba14a8d6",
					"protocol": "{{baseProtocol}}",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{basePort}}",
					"path": [
						"api",
						"{{apiVersion}}",
						"airlines",
						"82433181-5b98-42b1-97a2-2520ba14a8d6"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Otro nombre\",\n    \"description\": \"Otra descripcion\",\n    \"dateFounding\": \"1998-03-12\",\n    \"webPage\":\"google.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/api/{{apiVersion}}/airlines/{{airline_id}}",
					"protocol": "{{baseProtocol}}",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{basePort}}",
					"path": [
						"api",
						"{{apiVersion}}",
						"airlines",
						"{{airline_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Airline with unexisting id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airline with id e7884f54-069d-45a8-bebc-30c75ae457c3 has not been found\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Otro nombre\",\n    \"description\": \"Otra descripcion\",\n    \"dateFounding\": \"1998-03-12\",\n    \"webPage\":\"google.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/api/{{apiVersion}}/airlines/e7884f54-069d-45a8-bebc-30c75ae457c3",
					"protocol": "{{baseProtocol}}",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{basePort}}",
					"path": [
						"api",
						"{{apiVersion}}",
						"airlines",
						"e7884f54-069d-45a8-bebc-30c75ae457c3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/api/{{apiVersion}}/airlines/{{airline_id}}",
					"protocol": "{{baseProtocol}}",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{basePort}}",
					"path": [
						"api",
						"{{apiVersion}}",
						"airlines",
						"{{airline_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Airline with unexisting id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airline with id a504f410-a8be-44b4-bb07-89944bc9a082 has not been found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseProtocol}}://{{baseURL}}:{{basePort}}/api/{{apiVersion}}/airlines/a504f410-a8be-44b4-bb07-89944bc9a082",
					"protocol": "{{baseProtocol}}",
					"host": [
						"{{baseURL}}"
					],
					"port": "{{basePort}}",
					"path": [
						"api",
						"{{apiVersion}}",
						"airlines",
						"a504f410-a8be-44b4-bb07-89944bc9a082"
					]
				}
			},
			"response": []
		}
	]
}